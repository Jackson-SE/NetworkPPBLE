uniform_density <- function( x, l, u ){
if( sum( x < l )  == 0 & sum ( x > u ) == 0 ){
d <- 1 / ( prod( u - l ) )
}else{
d <- 0
}
return( d )
}
x <- c(3,4)
l <- c(2.3,4.5)
u <- c(6,6)
uniform_density( x, l, u )
uniform_density( x+1, l, u )
devtools::load_all(".")
document()
source('~/Documents/Academic_Work/R Functions in Packages/Package Building Libraries.R')
devtools::load_all(".")
document()
library(QuickFunc)
source('~/Documents/Academic_Work/R Functions in Packages/Package Building Libraries.R')
devtools::load_all(".")
document()
library(QuickFunc)
source('~/Documents/Academic_Work/R Functions in Packages/Package Building Libraries.R')
devtools::load_all(".")
document()
library(QuickFunc)
source('~/Documents/Academic_Work/R Functions in Packages/Package Building Libraries.R')
use_r("mvnorm_density")
source('~/Documents/Academic_Work/R Functions in Packages/Package Building Libraries.R')
devtools::load_all(".")
document()
use_r( "partition.test.r" )
@^20
2^20
2^40
source('~/Documents/Academic_Work/R Functions in Packages/Package Building Libraries.R')
devtools::load_all(".")
document()
use_r( "arg_min.r" )
mean( c(4,5 ))
mean( c(4,54 ))
?step
?sample
sam <- sample( 1:100, 10 )
sam
sam <- order( sample( 1:100, 10 ) )
sam
sam <- sort( sample( 1:100, 10 ) )
sam
x = 12
x < a
x<sam
1:100, 10 ) )
fn <- function( x ){ x >= sam
x >= sam
sam[0]
0 + sam[0]
as.numeric(sam[0])
0
#' @param p precision
#'
#' @return \code{a}, a scalar such that f(a) >= v and f(a-p) < v, along with \code{fa}, which is f(a).
#' @export
#'
#' @examples
#' sam <- sort( sample( 1:100, 10 ) )
#' fn <- function( x ){ sam[sum( x >= sam )] }
#' arg_min( fn, v = 33, p = 10 )
#' arg_min( fn, v = 33, p = 0.1 )
arg_min <- function( f, v, l, u, p ){
# Evaluate f(l)...
fl <- f( l )
# ...and check that f(l) < v.
if( fl >= v ){
a <- l
fa <- fl
warning( "f(l) >= v, hence algorithm stops immediately." )
# Otherwise...
}else{
# Evaluate f(u)...
fu <- f( u )
# ...and check that f(u) >= v.
if( fu < v ){
a <- NA
fa <- NA
warning( "f(u) < v, hence we cannot find a such that l <= a <= u and f(a) >= v, hence NA returned.")
# Otherwise...
}else{
# Whilst the difference between l and u is greater than the desired precision, p...
while( u - l > p ){
# ...evaluate the midpoint between l and u.
m <- ( l + u ) / 2
# Evaluate the function at this midpoint.
fm <- f( m )
# If f(m) >= v...
if( fm >= v ){
# ...bring the upper bound down to the midpoint as we know our value is between lower and mid.
u <- m
fu <- fm
# Otherwise...
}else{
# ...bring the lower bound up to the modpoint as we know our value is between mid and upper.
l <- m
fl <- fm
}
}
# Answer is now the current u, for which we know f(u) >= v, with precision u - l, since whilst f(l) < v, for values between l < s < u, we do not know whether f(s) >= v or not, so our desired answer could be any s in that range.
a <- u
fa <- fu
}
}
# Return the result.
return( list( "a" = a, "fa" = fa ) )
}
fn <- function( x ){ sam[sum( x >= sam )] }
fn(12)
fn(115)
fn(15)
sam
arg_min( fn, v = 33, p = 10 )
arg_min( fn, v = 33, l = 0, u = 100, p = 10 )
fn <- function( x ){ as.numeric( sam[sum( x >= sam )] ) }
arg_min( fn, v = 33, l = 0, u = 100, p = 10 )
f = fn
l
l = 0
# Evaluate f(l)...
fl <- f( l )
fl
fl >= v
v = 3
fl >= v
fn <- function( x ){ if( x >= sam[1] ){ sam[sum( x >= sam )] }else{ 0 } }
fn(19)
fn(-23)
fn(-345)
fn(-3453433)
sam <- sort( sample( 1:100, 10 ) )
fn <- function( x ){ if( x >= sam[1] ){ sam[sum( x >= sam )] }else{ 0 } }
sam
arg_min( fn, v = 33, l = 0, u = 100, p = 10 )
arg_min( fn, v = 33, l = 0, u - 100, p = 0.1 )
arg_min( fn, v = 33, l = 0, u - 100, p = 0.1 )
arg_min( fn, v = 33, l = 0, u = 100, p = 0.1 )
arg_min( fn, v = 1000, l = 0, u = 100, p = 0.1 )
arg_min( fn, v = -78, l = 0, u = 100, p = 0.1 )
?log
log2(1/0.0001) + 2
ceiling( log2(1/0.0001) + 2 )
use_r( "arg_min_eval_count.r" )
devtools::load_all(".")
doucment()
document()
devtools::load_all(".")
document()
source('~/Documents/Academic_Work/R Functions in Packages/Package Building Libraries.R')
devtools::load_all(".")
document()
devtools::load_all(".")
document()
library(QuickFunc)
source('~/Documents/Academic_Work/R Functions in Packages/Package Building Libraries.R')
X <- matrix(runif(6), ncol = 2)
X
devtools::load_all(".")
document()
MatrixMM( X )
?pmin
#' @param X matrix
#' @param maximum Take the maximum (\code{TRUE}) or minimum (\code{FALSE})...
#' @param column ...of each column (\code{TRUE}) or row (\code{FALSE})
#'
#' @return vector of maximum or minimum values of the columns or rows of X.
#' @export
#'
#' @examples
#' X <- matrix(runif(6), ncol = 2)
#' MatrixMM( X )
MatrixMM <- function( X, maximum = TRUE, column = TRUE, ... ){
if( maximum == TRUE & column == TRUE ){
# Maximum of each column of X.
Y <- do.call( pmax, as.data.frame( t(X) ), ... )
}
if( maximum == FALSE & column == TRUE ){
# Minimum of each column of X.
Y <- do.call( pmin, as.data.frame( t(X) ) )
}
if( maximum == TRUE & column == FALSE ){
# Maximum of each row of X.
Y <- do.call( pmax, as.data.frame( X ) )
}
if( maximum == FALSE & column == FALSE ){
# Minimum of each row of X.
Y <- do.call( pmin, as.data.frame( X ) )
}
return(Y)
}
X <- matrix(runif(6), ncol = 2)
MatrixMM( X )
MatrixMM( X, na.rm = TRUE )
devtools::load_all(".")
X <- matrix(runif(6), ncol = 2)
MatrixMM( X )
MatrixMM( X, na.rm=TRUE )
devtools::load_all(".")
MatrixMM( X )
MatrixMM( X, na.rm = TRUE )
devtools::load_all(".")
X <- matrix(runif(6), ncol = 2)
MatrixMM( X, na.rm = TRUE )
library(matrixStats)
?colMaxs
devtools::load_all(".")
document()
devtools::load_all(".")
document()
source('~/Documents/Academic_Work/R Functions in Packages/Package Building Libraries.R')
devtools::load_all(".")
document()
X <- matrix(1:210, ncol = 15)
ab(X)
devtools::load_all(".")
document()
is.array(matrix(c(3,4,5)))
A <- array( 1:24, dim = c(2,3,4) )
B <- matrix( 1:12, nrow = 3 )
A
B
add_arrays( A, B, d = 1 )
add_arrays( A, B, d = 1, operation = "multiplication" )
devtools::load_all(".")
document()
sam <- sort( sample( 1:100, 10 ) )
fn <- function( x ){ if( x >= sam[1] ){ sam[sum( x >= sam )] }else{ 0 } }
arg_min( fn, v = 33, l = 0, u = 100, p = 10 )
arg_min( fn, v = 33, l = 0, u = 100, p = 0.1 )
devtools::load_all(".")
document()
X <- matrix( 1:12, ncol = 3 )
ArrayListConversion( X, levels = c("cat", "dog", "rabbit") )
Y <- matrix( 1:6, ncol = 2)
Z <- matrix( 7:12, ncol = 2)
L <- list( "cat" = Y, "dog" = Z )
ArrayListConversion( L )
devtools::load_all(".")
document()
A <- array( 1:24, dim = c( 2,3,4 ) )
b = 1:4
AVEM( A, b )
devtools::load_all(".")
document()
X <- matrix( sample( 50, 20 ), ncol = 4 )
X
rowSort( X )
rowSort( X, decreasing = TRUE )
colSort( X )
colSort( X, decreasing = TRUE )
A <- array( 1:24, dim = c( 2,3,4 ) )
B <- matrix( 1:6, nrow=2 )
CompareAndAdd( A, B )
deg2rad( 60 )
rad2deg( 1 )
a <- c( 3, 5, 6.2 )
b <- c( 1, 9, 3.1 )
euclidean_distance( a, b )
devtools::load_all(".")
document()
L <- list( "rabbit" = 3, "BigMatrix" = matrix( runif( 100 ), ncol = 10 ) )
ExtNames( L )
rabbit
L <- list( "rabbit" = 3, "BigMatrix" = matrix( runif( 100 ), ncol = 10 ) )
L$rabbit
ExtNames( L )
rabbit
data( USArrests )
FullLinearModel( USArrests )
FullLinearModel( USArrests, order = 2 )
FullLinearModel( USArrests, order = 3 )
FullLinearModel( USArrests[,c("UrbanPop", "Assault")], y = USArrests[,"Murder"], order = 2 )
devtools::load_all(".")
document()
V <- array( stats::rnorm( 18, 0, 0.1) + rep( c( diag( 3 ) ), 2 ), dim = c(3,3,2) )
V
InvertMatrices( V )
devtools::load_all(".")
document`90`
document()
f <- function( y ){ c( sin( y[1] ) + cos( y[2] ), cos( y[1] ) + sin( y[2] ) ) }
y <- matrix( runif( 40 ), ncol = 2 )
z <- t( apply( y, 1, f ) )
x <- matrix( runif( 30 ), ncol = 2 )
y
z
devtools::load_all(".")
document()
devtools::load_all(".")
document()
f <- function( y ){ c( sin( y[1] ) + cos( y[2] ), cos( y[1] ) + sin( y[2] ) ) }
y <- matrix( runif( 40 ), ncol = 2 )
z <- t( apply( y, 1, f ) )
x <- matrix( runif( 30 ), ncol = 2 )
kNNinterp( x, y, z )
kNNinterp( x, y, z[,1] )
kNNinterp( x[1,,drop=FALSE], y, z )
kNNinterp( x[1,], y, z )
source('~/Documents/Academic_Work/R Functions in Packages/QuickFunc/R/kNNinterp.R')
devtools::load_all(".")
document()
f <- function( y ){ c( sin( y[1] ) + cos( y[2] ), cos( y[1] ) + sin( y[2] ) ) }
y <- matrix( runif( 40 ), ncol = 2 )
z <- t( apply( y, 1, f ) )
x <- matrix( runif( 30 ), ncol = 2 )
kNNinterp( x, y, z )
kNNinterp( x, y, z[,1] )
kNNinterp( x[1,,drop=FALSE], y, z )
kNNinterp( x[1,], y, z )
NROW(c(1,3))
NCOL(c(1,3))
devtools::load_all(".")
document()
?order
devtools::load_all(".")
document()
devtools::load_all(".")
document()
devtools::load_all(".")
document()
devtools::load_all(".")
document()
X <- matrix( runif( 6 ), ncol = 2 )
MatrixMM( X )
Y <- data.frame( X )
Y
Y <- data.frame( X, colnames = c("cat", "dog") )
data.frame
?data.frame
Y <- data.frame( X, col.names = c("cat", "dog") )
Y <- data.frame( X, row.names = c( "cat", "dog", "rabbit" ) )
Y
MatrixMM( Y )
MatrixMM( X )
devtools::load_all(".")
document()
X <- matrix( runif( 12 ), ncol = 3 )
MinDist( X )
Y <- data.frame( X, row.names = c( "cat", "dog", "rabbit", "mouse" ) )
MatrixMM( Y )
Y <- data.frame( X, row.names = c( "cat", "dog", "rabbit", "mouse" ) )
MinDist( Y )
devtools::load_all(".")
document()
X <- matrix( runif( 12 ), ncol = 3 )
MinDist( X )
Y <- data.frame( X, row.names = c( "cat", "dog", "rabbit", "mouse" ) )
MinDist( Y )
devtools::load_all(".")
document()
89
devtools::load_all(".")
document()
X <- matrix( runif(15, 2, 4), ncol = 3 )
Scale( X, a = 2, b = 4 )
Y <- data.frame( X )
Scale( Y, a = 2, b = 4 )
devtools::load_all(".")
document()
X <- matrix( runif(15, 2, 4), ncol = 3 )
Scale( X, a = 2, b = 4 )
X - 3
Y <- data.frame(X)
Scale( Y, a = 2, b = 4 )
NCOL( Y)
devtools::load_all(".")
document()
X
Y <- data.frame( X)
Scale( Y, a = c(2,2,3), b = c(4,5,7) )
devtools::load_all(".")
document()
Scale( Y, a = c(2,2,3), b = c(4,5,7) )
X
EX = c(3, 8, 2)
VarX = rep(0.7, 3)
x = c(3.82, 6.34, 1.89)
Stand_Obs(x, EX, VarX)
devtools::load_all(".")
document()
x <- c(3, 4)
l <- c(2.3, 4.5)
u <- c(6, 6)
uniform_density( x, l, u )
uniform_density( x + 1, l, u )
t(c(3,4))
devtools::load_all(".")
devtools::load_all(".")
document()
library(QuickFunc)
source('~/Documents/Academic_Work/R Functions in Packages/Package Building Libraries.R')
devtools::load_all(".")
document()
use.r( "relist.r" )
use_r( "relist.r" )
list("carrot", "ball")
?list
list("carrot" = 4, "tomato" = 6)
al <- list("carrot" = 4, "tomato" = 6 )
al
names(al)
al <- list(4,6)
al
names(al) <- c("carrot", "tomato")
al
devtools::load_all(".")
document()
z <- 1:10
relist( z )
relist( z, lop = c(2,3,5) )
devtools::load_all(".")
document()
relist( z )
relist( z, lop = c(2,3,5) )
relist( z, lop = c(2,3,5), names = c("dog", "cat", "rabbit") )
devtools::load_all(".")
document()
devtools::load_all(".")
document()
relist( z )
relist( z, lop = c(2,3,5) )
relist( z, lop = c(2,3,5), names = c("dog", "cat", "rabbit") )
library(QuickFunc)
source('~/Documents/Academic_Work/R Functions in Packages/Package Building Libraries.R')
devtools::load_all(".")
document()
library(QuickFunc)
source('~/Documents/Academic Work/R Functions in Packages/Package Building Libraries.R', echo=TRUE)
devtools::load_all(".")
document()
library(QuickFunc)
source('~/Documents/Academic Work/R Functions in Packages/Package Building Libraries.R', echo=TRUE)
build_manual("QuickFunc")
devtools::load_all(".")
document()
build_manual("QuickFunc")
build_manual(QuickFunc)
source('~/Documents/Academic Work/R Functions in Packages/Package Building Libraries.R', echo=TRUE)
devtools::load_all(".")
document()
devtools::load_all(".")
document()
devtools::load_all(".")
document()
library(QuickFunc)
source('~/Documents/Academic Work/R Functions in Packages/Package Building Libraries.R', echo=TRUE)
devtools::load_all(".")
document()
fx <- c(3,5,6)
Efx <- c(4,3,5.75)
Varfx <- rep( 0.8, 3 )
Prediction_diagnostics( fx, Efx, Varfx )
library(QuickFunc)
source('~/Documents/Academic Work/R Functions in Packages/Package Building Libraries.R')
devtools::load_all(".")
?install.packages
install.packages( c("tgp", "tmvtnorm", "FNN" ) )
devtools::load_all(".")
install.packages( c( tmvtnorm" ) )
install.packages( c( "tmvtnorm" ) )
devtools::load_all(".")
source('~/Documents/Academic Work/R Functions in Packages/Package Building Libraries.R')
devtools::load_all(".")
library("tmvtnorm")
install.packages("gmm")
library("tmvtnorm")
source('~/Documents/Academic Work/R Functions in Packages/Package Building Libraries.R')
devtools::load_all(".")
library(tmvtnorm)
install.packages("gmm")
library(gmm)
library("devtools")
library("roxygen2")
library("testthat")
devtools::load_all(".")
documents()
document()
library(tmvtnorm)
is.na(1:3)
devtools::load_all(".")
document()
devtools::load_all(".")
document()
library(QuickFunc)
devtools::load_all(".")
source('~/Documents/Academic Work/R Functions in Packages/Package Building Libraries.R')
devtools::load_all(".")
fx <- c(3,5,6)
Efx <- c(4,3,5.75)
Varfx <- rep( 0.8, 3 )
Prediction_diagnostics( fx, Efx, Varfx )
devtools::load_all(".")
Prediction_diagnostics( fx, Efx, Varfx )
devtools::load_all(".")
document()
devtools::load_all(".")
document()
devtools::load_all(".")
devtools::load_all(".")
document()
library(QuickFunc)
library("devtools")
library("roxygen2")
library("testthat")
